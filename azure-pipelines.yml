# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

jobs:
  - job:
    displayName: Windows VS2017
    pool:
      vmImage: 'vs2017-win2016'
    strategy:
      matrix:
        64-bit Release:
          BuildType: Release
          Generator: '-G"Visual Studio 15 2017 Win64" -T host=x64'
          JFlag: '-j 2'
    timeoutInMinutes: 150
    steps:
      # AVRO
      - powershell: |
          Invoke-WebRequest https://mirroir.wptheme.fr/apache/avro/avro-1.10.1/cpp/avro-cpp-1.10.1.tar.gz -OutFile $(Agent.TempDirectory)/avro-cpp-1.10.1.tar.gz
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: '$(Agent.TempDirectory)/avro-cpp-1.10.1.tar.gz'
          cleanDestinationFolder: false
      - powershell: |
          ((Get-Content -path $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt -Raw) -replace 'install \(TARGETS avrocpp avrocpp_s','install (TARGETS avrocpp_s') | Set-Content -Path $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt
          ((Get-Content -path $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt -Raw) -replace 'install \(TARGETS avrogencpp RUNTIME DESTINATION bin\)','') | Set-Content -Path $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt
        displayName: 'Do not install avro non static' 
      - task: CMake@1
        displayName: 'CMake configure AVRO'
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.1
          cmakeArgs:
            $(Build.SourcesDirectory)/avro-cpp-1.10.1
            $(Generator)
            -Wno-dev -Wno-deprecated
            -DBoost_INCLUDE_DIR=$(BOOST_ROOT_1_72_0)/include
            -DCMAKE_INSTALL_PREFIX=$(Agent.TempDirectory)/avro-cpp-1.10.1-install
      - task: CMake@1
        displayName: "CMake build AVRO --config $(BuildType)"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.1
          cmakeArgs: --build . --config $(BuildType) --target avrocpp_s -- /verbosity:minimal
      - task: CMake@1
        displayName: "CMake Install AVRO --config $(BuildType)"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.1
          cmakeArgs: --install .
          
      - task: CMake@1
        displayName: 'CMake .. $(Generator)'
        inputs:
          cmakeArgs:
            ..
            $(Generator)
            -Wno-dev -Wno-deprecated
            -DBoost_INCLUDE_DIR=$(BOOST_ROOT_1_72_0)/include
            -DAVRO_INCLUDE_DIR=$(Agent.TempDirectory)/avro-cpp-1.10.1-install/include
            -DAVRO_LIBRARY_RELEASE=$(Agent.TempDirectory)/avro-cpp-1.10.1-install/lib/avrocpp_s.lib

      - task: CMake@1
        displayName: "Build --config $(BuildType)"
        inputs:
          cmakeArgs: --build . --config $(BuildType) -- /verbosity:minimal

  - job:
    displayName: Windows VS2019
    pool:
      vmImage: 'windows-2019'
    timeoutInMinutes: 150
    strategy:
      matrix:
        # 64-bit Debug:
        #   BuildType: Debug
        #   Generator: '-G"Visual Studio 16 2019" -A x64" -T host=x64'
        #   JFlag: -j 4

        64-bit Release:
          BuildType: Release
          Generator: '-G"Visual Studio 16 2019" -A x64 -T host=x64'
          JFlag: '-j 2'
    steps:       
      # AVRO
      - powershell: |
          Invoke-WebRequest https://mirroir.wptheme.fr/apache/avro/avro-1.10.1/cpp/avro-cpp-1.10.1.tar.gz -OutFile $(Agent.TempDirectory)/avro-cpp-1.10.1.tar.gz
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: '$(Agent.TempDirectory)/avro-cpp-1.10.1.tar.gz'
          cleanDestinationFolder: false
      - powershell: |
          ((Get-Content -path $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt -Raw) -replace 'install \(TARGETS avrocpp avrocpp_s','install (TARGETS avrocpp_s') | Set-Content -Path $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt
          ((Get-Content -path $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt -Raw) -replace 'install \(TARGETS avrogencpp RUNTIME DESTINATION bin\)','') | Set-Content -Path $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt
        displayName: 'Do not install avro non static' 
      - task: CMake@1
        displayName: 'CMake configure AVRO'
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.1
          cmakeArgs:
            $(Build.SourcesDirectory)/avro-cpp-1.10.1
            $(Generator)
            -Wno-dev -Wno-deprecated
            -DBoost_INCLUDE_DIR=$(BOOST_ROOT_1_72_0)/include
            -DCMAKE_INSTALL_PREFIX=$(Agent.TempDirectory)/avro-cpp-1.10.1-install
      - task: CMake@1
        displayName: "CMake build AVRO --config $(BuildType)"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.1
          cmakeArgs: --build . --config $(BuildType) --target avrocpp_s -- /verbosity:minimal
      - task: CMake@1
        displayName: "CMake Install AVRO --config $(BuildType)"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.1
          cmakeArgs: --install .

      # Patch about https://github.com/boostorg/beast/issues/1980
      - powershell: |
          ((Get-Content -path $(BOOST_ROOT_1_72_0)/include/boost/beast/core/impl/file_stdio.ipp -Raw) -replace 'std::numeric_limits<long>::max','(std::numeric_limits<long>::max)') | Set-Content -Path $(BOOST_ROOT_1_72_0)/include/boost/beast/core/impl/file_stdio.ipp
        displayName: 'Patching Beast 1.72 for MSVC'
          
      - task: CMake@1
        displayName: 'CMake .. $(Generator)'
        inputs:
          cmakeArgs:
            ..
            $(Generator)
            -Wno-dev -Wno-deprecated
            -DBoost_INCLUDE_DIR=$(BOOST_ROOT_1_72_0)/include
            -DAVRO_INCLUDE_DIR=$(Agent.TempDirectory)/avro-cpp-1.10.1-install/include
            -DAVRO_LIBRARY_RELEASE=$(Agent.TempDirectory)/avro-cpp-1.10.1-install/lib/avrocpp_s.lib

      - task: CMake@1
        displayName: "Build --config $(BuildType)"
        inputs:
          cmakeArgs: --build . --config $(BuildType) -- /verbosity:minimal
          
  - job:
    displayName: Ubuntu 16.04
    pool:
      vmImage: 'ubuntu-16.04'
    timeoutInMinutes: 120
    steps:
      - script: |
          curl https://mirroir.wptheme.fr/apache/avro/avro-1.10.1/cpp/avro-cpp-1.10.1.tar.gz -o $(Agent.TempDirectory)/avro-cpp-1.10.1.tar.gz
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: '$(Agent.TempDirectory)/avro-cpp-1.10.1.tar.gz'
          cleanDestinationFolder: false
      - powershell: |
          sed -i 's/install (TARGETS avrocpp avrocpp_s/install (TARGETS avrocpp_s/' $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt
          sed -i 's/install (TARGETS avrogencpp RUNTIME DESTINATION bin\)//' $(Build.SourcesDirectory)/avro-cpp-1.10.1/CMakeLists.txt
        displayName: 'Do not install avro non static' 
      - task: CMake@1
        displayName: 'CMake configure AVRO'
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.1
          cmakeArgs:
            $(Build.SourcesDirectory)/avro-cpp-1.10.1
            -Wno-dev -Wno-deprecated
            -DBoost_INCLUDE_DIR=$(BOOST_ROOT_1_72_0)/include
            -DCMAKE_INSTALL_PREFIX=$(Agent.TempDirectory)/avro-cpp-1.10.1-install
      - task: CMake@1
        displayName: "CMake build AVRO --config $(BuildType)"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.1
          cmakeArgs: --build . --config $(BuildType) --target avrocpp_s -- /verbosity:minimal
      - task: CMake@1
        displayName: "CMake Install AVRO --config $(BuildType)"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.1
          cmakeArgs: --install .    

      - task: CMake@1
        displayName: 'Configure FETPAPI build'
        inputs:
          cmakeArgs:
            -Wno-dev -Wno-deprecated
            -DBoost_INCLUDE_DIR=$(BOOST_ROOT_1_72_0)/include
            -DAVRO_INCLUDE_DIR=$(Agent.TempDirectory)/avro-cpp-1.10.1-install/include
            -DAVRO_LIBRARY_RELEASE=$(Agent.TempDirectory)/avro-cpp-1.10.1-install/lib/avrocpp_s.a
            -DCMAKE_BUILD_TYPE=Release
            -S $(Build.SourcesDirectory)
            -B $(Build.BinariesDirectory)

      - task: CMake@1
        displayName: "Build FETPAPI"
        inputs:
          cmakeArgs: --build $(Build.BinariesDirectory)
