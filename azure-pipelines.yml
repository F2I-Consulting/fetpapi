jobs:
  - job:
    displayName: Ubuntu 20.04
    pool:
      vmImage: 'ubuntu-20.04'
    timeoutInMinutes: 120
    steps:
      # BOOST
      - script: |
          sudo apt install -y libboost-all-dev
        displayName: 'APT install'
        
      # AVRO
      - script: |
          curl https://archive.apache.org/dist/avro/avro-1.10.2/cpp/avro-cpp-1.10.2.tar.gz -o $(Agent.TempDirectory)/avro-cpp-1.10.2.tar.gz
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: '$(Agent.TempDirectory)/avro-cpp-1.10.2.tar.gz'
          cleanDestinationFolder: false
      - powershell: |
          sed -i 's/install (TARGETS avrocpp avrocpp_s/install (TARGETS avrocpp_s/' $(Build.SourcesDirectory)/avro-cpp-1.10.2/CMakeLists.txt
          sed -i 's/install (TARGETS avrogencpp RUNTIME DESTINATION bin)//' $(Build.SourcesDirectory)/avro-cpp-1.10.2/CMakeLists.txt
        displayName: 'Do not install avro non static' 
      - task: CMake@1
        displayName: 'CMake configure AVRO'
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.2
          cmakeArgs:
            $(Build.SourcesDirectory)/avro-cpp-1.10.2
            -Wno-dev -Wno-deprecated
            -DCMAKE_INSTALL_PREFIX=$(Agent.TempDirectory)/avro-cpp-1.10.2-install
      - task: CMake@1
        displayName: "CMake build AVRO"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.2
          cmakeArgs: --build . --target avrocpp_s
      - task: CMake@1
        displayName: "CMake Install AVRO"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.2
          cmakeArgs: --install .    

      - task: CMake@1
        displayName: 'Configure FETPAPI build'
        inputs:
          cmakeArgs:
            -Wno-dev -Wno-deprecated
            -DAVRO_INCLUDE_DIR=$(Agent.TempDirectory)/avro-cpp-1.10.2-install/include
            -DAVRO_LIBRARY_RELEASE=$(Agent.TempDirectory)/avro-cpp-1.10.2-install/lib/libavrocpp_s.a
            -DCMAKE_BUILD_TYPE=Release
            -S $(Build.SourcesDirectory)
            -B $(Build.BinariesDirectory)

      - task: CMake@1
        displayName: "Build FETPAPI"
        inputs:
          cmakeArgs: --build $(Build.BinariesDirectory)
          
  - job:
    displayName: Ubuntu 20.04 with fesapi
    pool:
      vmImage: 'ubuntu-20.04'
    timeoutInMinutes: 120
    steps:
      # BOOST
      - script: |
          sudo apt install -y libboost-all-dev libhdf5-dev libminizip-dev
        displayName: 'APT install'
        
      # AVRO
      - script: |
          curl https://archive.apache.org/dist/avro/avro-1.10.2/cpp/avro-cpp-1.10.2.tar.gz -o $(Agent.TempDirectory)/avro-cpp-1.10.2.tar.gz
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: '$(Agent.TempDirectory)/avro-cpp-1.10.2.tar.gz'
          cleanDestinationFolder: false
      - powershell: |
          sed -i 's/install (TARGETS avrocpp avrocpp_s/install (TARGETS avrocpp_s/' $(Build.SourcesDirectory)/avro-cpp-1.10.2/CMakeLists.txt
          sed -i 's/install (TARGETS avrogencpp RUNTIME DESTINATION bin)//' $(Build.SourcesDirectory)/avro-cpp-1.10.2/CMakeLists.txt
        displayName: 'Do not install avro non static' 
      - task: CMake@1
        displayName: 'CMake configure AVRO'
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.2
          cmakeArgs:
            $(Build.SourcesDirectory)/avro-cpp-1.10.2
            -Wno-dev -Wno-deprecated
            -DCMAKE_INSTALL_PREFIX=$(Agent.TempDirectory)/avro-cpp-1.10.2-install
      - task: CMake@1
        displayName: "CMake build AVRO"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.2
          cmakeArgs: --build . --target avrocpp_s
      - task: CMake@1
        displayName: "CMake Install AVRO"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/build-avro-cpp-1.10.2
          cmakeArgs: --install .    
       
      # fesapi
      - script: |
          #git clone https://github.com/F2I-Consulting/fesapi.git -b v2.2.0.0 $(Agent.TempDirectory)/fesapi
          git clone https://github.com/F2I-Consulting/fesapi.git $(Agent.TempDirectory)/fesapi
        displayName: 'Cloning fesapi'
      - task: CMake@1
        displayName: 'CMake configure fesapi'
        inputs:
          workingDirectory: $(Agent.TempDirectory)/fesapi-build
          cmakeArgs:
            ../fesapi
            -Wno-dev -Wno-deprecated
            -DMINIZIP_INCLUDE_DIR=/usr/include/minizip
            -DMINIZIP_LIBRARY_RELEASE=/usr/lib/x86_64-linux-gnu/libminizip.so
            -DZLIB_INCLUDE_DIR=/usr/include
            -DZLIB_LIBRARY_RELEASE=/usr/lib/x86_64-linux-gnu/libz.so
            -DCMAKE_BUILD_TYPE=Release
      - task: CMake@1
        displayName: "CMake build fesapi"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/fesapi-build
          cmakeArgs: --build . 
      - task: CMake@1
        displayName: "CMake Install fesapi"
        inputs:
          workingDirectory: $(Agent.TempDirectory)/fesapi-build
          cmakeArgs: --build . --target install

      - task: CMake@1
        displayName: 'Configure FETPAPI build'
        inputs:
          cmakeArgs:
            -Wno-dev -Wno-deprecated
            -DAVRO_INCLUDE_DIR=$(Agent.TempDirectory)/avro-cpp-1.10.2-install/include
            -DAVRO_LIBRARY_RELEASE=$(Agent.TempDirectory)/avro-cpp-1.10.2-install/lib/libavrocpp_s.a
            -DWITH_FESAPI=TRUE
            -DFESAPI_INCLUDE_DIR=$(Agent.TempDirectory)/fesapi-build/install/include
            -DFESAPI_LIBRARY_RELEASE=$(Agent.TempDirectory)/fesapi-build/install/lib/libFesapiCpp.so
            -DCMAKE_BUILD_TYPE=Release
            -S $(Build.SourcesDirectory)
            -B $(Build.BinariesDirectory)

      - task: CMake@1
        displayName: "Build FETPAPI"
        inputs:
          cmakeArgs: --build $(Build.BinariesDirectory)
