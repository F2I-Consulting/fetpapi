# Included in ../CMakeLists.txt if Python build is selected.

find_package(SWIG 3.0 REQUIRED)
find_package(Python3 REQUIRED)

set (Fetpapi_PYTHON_VERSION ${Fetpapi_VERSION_MAJOR}.${Fetpapi_VERSION_MINOR}.${Fetpapi_VERSION_PATCH})

set(SWIG_LINKED_TO_RELEASE ON CACHE BOOL "Is your SWIG generated library linked to the release or debug version of FesapiCpp ?")
# See http://swig.org/Doc4.0/SWIGDocumentation.html#Python_nn28 for more information about SWIG python builtin parameter
set(SWIG_PYTHON_BUILTIN OFF CACHE BOOL "The use of Python proxy classes has performance implications that may be unacceptable for a high-performance library. The new -builtin option instructs SWIG to forego the use of proxy classes, and instead create wrapped types as new built-in Python types.")

file (REMOVE ${CMAKE_SOURCE_DIR}/python/fetpapi/__init__.py)

# The name of the library is different on Windows because it includes the version
if (WIN32)
	if (SWIG_LINKED_TO_RELEASE)
		set (ASSEMBLY_NAME ${PROJECT_NAME}${CMAKE_RELEASE_POSTFIX}.${Fetpapi_VERSION})
	else (SWIG_LINKED_TO_RELEASE)
		set (ASSEMBLY_NAME ${PROJECT_NAME}${CMAKE_DEBUG_POSTFIX}.${Fetpapi_VERSION})
	endif (SWIG_LINKED_TO_RELEASE)
else (WIN32)
	if (SWIG_LINKED_TO_RELEASE)
		set (ASSEMBLY_NAME ${PROJECT_NAME}${CMAKE_RELEASE_POSTFIX})
	else (SWIG_LINKED_TO_RELEASE)
		set (ASSEMBLY_NAME ${PROJECT_NAME}${CMAKE_DEBUG_POSTFIX})
	endif (SWIG_LINKED_TO_RELEASE)
endif (WIN32)
#cmake_path(GET AVRO_LIBRARY_RELEASE PARENT_PATH AVRO_LIBRARY_DIR_RELEASE)
get_filename_component(AVRO_LIBRARY_DIR_RELEASE ${AVRO_LIBRARY_RELEASE} DIRECTORY)
set (AVRO_LIBRARY_DIR_RELEASE ",'${AVRO_LIBRARY_DIR_RELEASE}'")
#cmake_path(GET AVRO_LIBRARY_RELEASE STEM LAST_ONLY AVRO_LIBRARY_RELEASE_WLE)
get_filename_component(AVRO_LIBRARY_RELEASE_WLE ${AVRO_LIBRARY_RELEASE} NAME_WLE)
if (UNIX)
	string(REGEX REPLACE "^lib" "" AVRO_LIBRARY_RELEASE_WLE ${AVRO_LIBRARY_RELEASE_WLE})
endif()
set (AVRO_LIBRARY_RELEASE_WLE ",'${AVRO_LIBRARY_RELEASE_WLE}'")
if (Boost_SYSTEM_LIBRARY_RELEASE)
	#cmake_path(GET Boost_SYSTEM_LIBRARY_RELEASE PARENT_PATH Boost_LIBRARY_DIR_RELEASE)
	get_filename_component(Boost_LIBRARY_DIR_RELEASE ${Boost_SYSTEM_LIBRARY_RELEASE} DIRECTORY)
	set(Boost_LIBRARY_DIR_RELEASE ",'${Boost_LIBRARY_DIR_RELEASE}'")
	#cmake_path(GET Boost_SYSTEM_LIBRARY_RELEASE STEM LAST_ONLY Boost_LIBRARY_RELEASE_WLE)
	get_filename_component(Boost_LIBRARY_RELEASE_WLE ${Boost_SYSTEM_LIBRARY_RELEASE} NAME_WLE)
	set (Boost_LIBRARY_RELEASE_WLE ",'${Boost_LIBRARY_RELEASE_WLE}'")
endif()
if (WITH_FESAPI)
	set (FESAPI_INCLUDE_DIR_FOR_SETUP_PY ",'${FESAPI_INCLUDE_DIR}'")
	#cmake_path(GET FESAPI_LIBRARY_RELEASE PARENT_PATH FESAPI_LIBRARY_DIR_RELEASE)
	get_filename_component(FESAPI_LIBRARY_DIR_RELEASE ${FESAPI_LIBRARY_RELEASE} DIRECTORY)
	set (FESAPI_LIBRARY_DIR_RELEASE ",'${FESAPI_LIBRARY_DIR_RELEASE}'")
	#cmake_path(GET FESAPI_LIBRARY_RELEASE STEM LAST_ONLY FESAPI_LIBRARY_RELEASE_WLE)
	get_filename_component(FESAPI_LIBRARY_RELEASE_WLE ${FESAPI_LIBRARY_RELEASE} NAME_WLE)
	set (FESAPI_LIBRARY_RELEASE_WLE ",'${FESAPI_LIBRARY_RELEASE_WLE}'")
endif ()
if (CMAKE_CXX_COMPILER_ID STREQUAL "MSVC")
	set (EXTRA_COMPILE_ARGS "extra_compile_args=['/DSWIG_TYPE_TABLE=FESTAPI']")
else ()
	set (EXTRA_COMPILE_ARGS "extra_compile_args=['-DSWIG_TYPE_TABLE=FESTAPI -std=c++11']")
endif()
configure_file(${CMAKE_SOURCE_DIR}/cmake/setup_etp.py.in ${CMAKE_SOURCE_DIR}/python/setup.py) # Overwrite if different

# SWIG execution
message("Generating SWIG Python files...")
set (EXECUTE_COMMAND "${SWIG_EXECUTABLE}")
if (WITH_FESAPI)
	list (APPEND EXECUTE_COMMAND -DWITH_FESAPI)
endif (WITH_FESAPI)
if (UNIX)
	list (APPEND EXECUTE_COMMAND -DSWIGWORDSIZE64)
endif (UNIX)
list (APPEND EXECUTE_COMMAND -v)
list (APPEND EXECUTE_COMMAND -c++)
list (APPEND EXECUTE_COMMAND -python)
list (APPEND EXECUTE_COMMAND -extranative)
if("${SWIG_VERSION}" VERSION_GREATER_EQUAL "4.0.0")
	list (APPEND EXECUTE_COMMAND -doxygen)
endif()
if (SWIG_PYTHON_BUILTIN)
	list (APPEND EXECUTE_COMMAND -builtin)
endif (SWIG_PYTHON_BUILTIN)
if("${SWIG_VERSION}" VERSION_LESS "4.1.0")
	list (APPEND EXECUTE_COMMAND -py3)
endif()
list (APPEND EXECUTE_COMMAND -o)
list (APPEND EXECUTE_COMMAND ${CMAKE_SOURCE_DIR}/python/swigGeneratedPythonWrapper.cpp)
list (APPEND EXECUTE_COMMAND -outdir)
list (APPEND EXECUTE_COMMAND ${CMAKE_SOURCE_DIR}/python/fetpapi)
list (APPEND EXECUTE_COMMAND ${CMAKE_SOURCE_DIR}/swig/swigEtp1_2Include.i)
if (WIN32)
	execute_process(COMMAND powershell ${EXECUTE_COMMAND})
elseif (UNIX)
	execute_process(COMMAND ${EXECUTE_COMMAND})
endif (WIN32)
file (RENAME ${CMAKE_SOURCE_DIR}/python/fetpapi/fetpapi.py ${CMAKE_SOURCE_DIR}/python/fetpapi/__init__.py)
message("SWIG Python files have been generated.")
